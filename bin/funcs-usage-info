#!/bin/bash

################################################################################
####
####  Functions for explaining usage of "new"...
####    @package: "New"
####    @author:  mrosata
####    @date:    10-11-2016
####


# Short and sweet info and direction to -h
function print_small_description() {
  echo -e "  \"new\" AKA \"blueprints.sh\"
    Flexible blueprinting. Pass -h for help"
}

# Large help (like a man page)
function print_program_help() {
  program_instruction | $PAGER
}

# Shows all the templates in the new templates directory 
function display_templates_list () {
  if [ -d "$NEW_TEMPLATES_DIR" ];then
    echo -e "\e[1m( global )\e[21m"
    echo -e "Found $(ls -1 $NEW_TEMPLATES_DIR | wc -l) templates:"
    list_subdirectories_in $NEW_TEMPLATES_DIR '    '
  fi

  if [ -d "$local_templates_dir" ];then
    echo -e "\e[1m( local )\e[21m"
    echo -e "Found $(ls -1 $local_templates_dir | wc -l) templates:"
    list_subdirectories_in $local_templates_dir '    '

  fi
}

# Info about where certain folders used by the program are
# currently pointed. Since the folders are configurable, 
# this information may be useful for more than just debugging
# the "new" base program scripts.
function show_folder_locations() {
  echo -e " \e[4m\"New\" folder locations:\e[24m

    - \e[1mNew bin directory (where program is):\e[21m
        $SCRIPTPATH
    - \e[1mTemplate directory:\e[21m
        $NEW_TEMPLATES_DIR
    - \e[1mCurrent working folder (your dir):\e[21m
        $TARGET_DIR"

  if [ -f "$local_config_file" ];then

    # LOCAL TEMPLATES DIR INFO
    echo -e "
    - \e[1m(local) Config found:\e[21m
        $local_config_file
    - \e[1m(local) Template directory:\e[21m"
    if [ -d "$local_templates_dir" ];then
      echo -ne "        $local_templates_dir"
    else
      echo -ne "        local directory not exists $local_templates_dir"
    fi

    # LOCAL BACKUPS DIR INFO
    echo -e "
    - \e[1m(local) Backup directory:\e[21m"
    if [ -d "$local_backups_dir" ];then
      echo -ne "        $local_backups_dir"
    else
      echo -ne "        local directory not exists $local_backups_dir"
    fi

  fi
  echo;
}


# Check if user passed -h|help -l|list or info
#   @param $1 pass in the param to check (probably $1)
function check_arguments_help_info_list () {
  if [ "$1" = "-h" ] || [ "$1" = "help" ];then
    print_program_help
    exit_with_code $EXIT_OK
  
  elif [ "$1" = "-l" ] || [ "$1" = "list" ];then
    display_templates_list
    exit_with_code $EXIT_OK
  
  elif [ "$1" = "info" ];then
    print_small_description
    exit_with_code $EXIT_OK
  fi
}

